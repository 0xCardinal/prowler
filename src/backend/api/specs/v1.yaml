openapi: 3.0.3
info:
  title: Prowler API
  version: 1.0.0
  description: |-
    Prowler API specification.

    This file is auto-generated.
paths:
  /api/v1/providers:
    get:
      operationId: providers_list
      description: Retrieve a list of all providers with options for filtering by
        various criteria.
      summary: List all providers
      parameters:
      - in: query
        name: fields[Provider]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - provider
            - provider_id
            - alias
            - connection
            - scanner_args
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[alias]
        schema:
          type: string
      - in: query
        name: filter[alias__icontains]
        schema:
          type: string
      - in: query
        name: filter[connected]
        schema:
          type: boolean
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[provider]
        schema:
          type: string
      - in: query
        name: filter[provider_id]
        schema:
          type: string
      - in: query
        name: filter[provider_id__icontains]
        schema:
          type: string
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - provider
            - -provider
            - provider_id
            - -provider_id
            - alias
            - -alias
            - connected
            - -connected
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Provider
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedProviderList'
          description: ''
    post:
      operationId: providers_create
      description: Add a new provider to the system by providing the required provider
        details.
      summary: Create a new provider
      tags:
      - Provider
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ProviderCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProviderCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProviderCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderCreateResponse'
          description: ''
  /api/v1/providers/{id}:
    get:
      operationId: providers_retrieve
      description: Fetch detailed information about a specific provider by their ID.
      summary: Retrieve data from a provider
      parameters:
      - in: query
        name: fields[Provider]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - provider
            - provider_id
            - alias
            - connection
            - scanner_args
            - url
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider.
        required: true
      tags:
      - Provider
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
          description: ''
    patch:
      operationId: providers_partial_update
      description: Update certain fields of an existing provider's information without
        affecting other fields.
      summary: Partially update a provider
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider.
        required: true
      tags:
      - Provider
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedProviderUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProviderUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProviderUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializerMetaclassResponse'
          description: ''
    delete:
      operationId: providers_destroy
      description: Remove a provider from the system by their ID.
      summary: Delete a provider
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider.
        required: true
      tags:
      - Provider
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializerMetaclassResponse'
          description: ''
  /api/v1/providers/{id}/connection:
    post:
      operationId: providers_connection_create
      description: Try to verify connection. For instance, Role & Credentials are
        set correctly
      summary: Check connection
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this provider.
        required: true
      tags:
      - Provider
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializerMetaclassResponse'
          description: ''
  /api/v1/scans:
    get:
      operationId: scans_list
      description: Retrieve a list of all scans with options for filtering by various
        criteria.
      summary: List all scans
      parameters:
      - in: query
        name: fields[Scan]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - state
            - unique_resource_count
            - progress
            - scanner_args
            - duration
            - provider
            - started_at
            - completed_at
            - scheduled_at
            - url
            - type
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - in: query
        name: filter[provider]
        schema:
          type: string
      - in: query
        name: filter[provider_id]
        schema:
          type: string
          format: uuid
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[started_at]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[started_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[started_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[type]
        schema:
          type: string
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - provider_id
            - -provider_id
            - name
            - -name
            - type
            - -type
            - attempted_at
            - -attempted_at
            - scheduled_at
            - -scheduled_at
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Scan
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedScanList'
          description: ''
    post:
      operationId: scans_create
      description: Trigger a manual scan by providing the required scan details. If
        `scanner_args` are not provided, the system will automatically use the default
        settings from the associated provider. If you do provide `scanner_args`, these
        settings will be merged with the provider's defaults. This means that your
        provided settings will override the defaults only where they conflict, while
        the rest of the default settings will remain intact.
      summary: Trigger a manual scan
      tags:
      - Scan
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScanCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScanCreateResponse'
          description: ''
  /api/v1/scans/{id}:
    get:
      operationId: scans_retrieve
      description: Fetch detailed information about a specific scan by its ID.
      summary: Retrieve data from a specific scan
      parameters:
      - in: query
        name: fields[Scan]
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - state
            - unique_resource_count
            - progress
            - scanner_args
            - duration
            - provider
            - started_at
            - completed_at
            - scheduled_at
            - url
            - type
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this scan.
        required: true
      tags:
      - Scan
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScanResponse'
          description: ''
    patch:
      operationId: scans_partial_update
      description: Update certain fields of an existing scan without affecting other
        fields.
      summary: Partially update a scan
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this scan.
        required: true
      tags:
      - Scan
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedScanUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScanUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScanUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializerMetaclassResponse'
          description: ''
  /api/v1/tasks:
    get:
      operationId: tasks_list
      description: Retrieve a list of all tasks with options for filtering by name,
        state, and other criteria.
      summary: List all tasks
      parameters:
      - in: query
        name: fields[Task]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - completed_at
            - name
            - state
            - result
            - metadata
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[state]
        schema:
          type: string
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - -inserted_at
            - completed_at
            - -completed_at
            - name
            - -name
            - state
            - -state
        explode: false
      tags:
      - Task
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
  /api/v1/tasks/{id}:
    get:
      operationId: tasks_retrieve
      description: Fetch detailed information about a specific task by its ID.
      summary: Retrieve data from a specific task
      parameters:
      - in: query
        name: fields[Task]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - completed_at
            - name
            - state
            - result
            - metadata
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this task.
        required: true
      tags:
      - Task
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
          description: ''
    delete:
      operationId: tasks_destroy
      description: Try to revoke a task using its ID. If the task is being already
        executed, its result will be ignored but it will finish. To prevent this,
        use the `force` query parameter under your own risk.
      summary: Revoke a task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this task.
        required: true
      tags:
      - Task
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializerMetaclassResponse'
          description: ''
  /api/v1/tenants:
    get:
      operationId: tenants_list
      description: Retrieve a list of all tenants with options for filtering by various
        criteria.
      summary: List all tenants
      parameters:
      - in: query
        name: fields[Tenant]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - name
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: query
        name: filter[inserted_at]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[inserted_at__lte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[name]
        schema:
          type: string
      - in: query
        name: filter[name__icontains]
        schema:
          type: string
      - name: filter[search]
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: filter[updated_at]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__gte]
        schema:
          type: string
          format: date-time
      - in: query
        name: filter[updated_at__lte]
        schema:
          type: string
          format: date-time
      - name: page[number]
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page[size]
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - -name
            - inserted_at
            - -inserted_at
            - updated_at
            - -updated_at
        explode: false
      tags:
      - Tenant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PaginatedTenantList'
          description: ''
    post:
      operationId: tenants_create
      description: Add a new tenant to the system by providing the required tenant
        details.
      summary: Create a new tenant
      tags:
      - Tenant
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TenantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TenantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TenantRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
          description: ''
  /api/v1/tenants/{id}:
    get:
      operationId: tenants_retrieve
      description: Fetch detailed information about a specific tenant by their ID.
      summary: Retrieve data from a tenant
      parameters:
      - in: query
        name: fields[Tenant]
        schema:
          type: array
          items:
            type: string
            enum:
            - inserted_at
            - updated_at
            - name
        description: endpoint return only specific fields in the response on a per-type
          basis by including a fields[TYPE] query parameter.
        explode: false
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tenant.
        required: true
      tags:
      - Tenant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
          description: ''
    patch:
      operationId: tenants_partial_update
      description: Update certain fields of an existing tenant's information without
        affecting other fields.
      summary: Partially update a tenant
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tenant.
        required: true
      tags:
      - Tenant
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTenantRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
          description: ''
    delete:
      operationId: tenants_destroy
      description: Remove a tenant from the system by their ID.
      summary: Delete a tenant
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this tenant.
        required: true
      tags:
      - Tenant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    DelayedTask:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeB52Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            id:
              type: string
            state:
              type: string
              enum:
              - available
              - scheduled
              - executing
              - completed
              - failed
              - cancelled
              readOnly: true
          required:
          - id
    PaginatedProviderList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
      required:
      - data
    PaginatedScanList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Scan'
      required:
      - data
    PaginatedTaskList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Task'
      required:
      - data
    PaginatedTenantList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tenant'
      required:
      - data
    PatchedProviderUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - Provider
            id: {}
            attributes:
              type: object
              properties:
                alias:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
                scanner_args: {}
      required:
      - data
    PatchedScanUpdateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - Scan
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
      required:
      - data
    PatchedTenantRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - Tenant
            id:
              type: string
              format: uuid
            attributes:
              type: object
              properties:
                inserted_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
              required:
              - name
      required:
      - data
    Provider:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type4e8Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            provider:
              enum:
              - aws
              - azure
              - gcp
              - kubernetes
              type: string
              description: |-
                * `aws` - AWS
                * `azure` - Azure
                * `gcp` - GCP
                * `kubernetes` - Kubernetes
            provider_id:
              type: string
              maxLength: 63
              minLength: 3
            alias:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            connection:
              type: object
              properties:
                connected:
                  type: boolean
                last_checked_at:
                  type: string
                  format: date-time
              readOnly: true
            scanner_args: {}
          required:
          - provider
          - provider_id
    ProviderCreate:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type4e8Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            alias:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            provider:
              enum:
              - aws
              - azure
              - gcp
              - kubernetes
              type: string
              description: |-
                * `aws` - AWS
                * `azure` - Azure
                * `gcp` - GCP
                * `kubernetes` - Kubernetes
            provider_id:
              type: string
              maxLength: 63
              minLength: 3
            scanner_args: {}
          required:
          - provider_id
    ProviderCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - Provider
            attributes:
              type: object
              properties:
                alias:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
                provider:
                  enum:
                  - aws
                  - azure
                  - gcp
                  - kubernetes
                  type: string
                  description: |-
                    * `aws` - AWS
                    * `azure` - Azure
                    * `gcp` - GCP
                    * `kubernetes` - Kubernetes
                provider_id:
                  type: string
                  minLength: 3
                  maxLength: 63
                scanner_args: {}
              required:
              - provider_id
      required:
      - data
    ProviderCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProviderCreate'
      required:
      - data
    ProviderResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Provider'
      required:
      - data
    Scan:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type2bbEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            name:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
            state:
              enum:
              - available
              - scheduled
              - executing
              - completed
              - failed
              - cancelled
              type: string
              description: |-
                * `available` - Available
                * `scheduled` - Scheduled
                * `executing` - Executing
                * `completed` - Completed
                * `failed` - Failed
                * `cancelled` - Cancelled
              readOnly: true
            unique_resource_count:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
            progress:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
            scanner_args: {}
            duration:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              nullable: true
            started_at:
              type: string
              format: date-time
              nullable: true
            completed_at:
              type: string
              format: date-time
              nullable: true
            scheduled_at:
              type: string
              format: date-time
              nullable: true
            type:
              enum:
              - scheduled
              - manual
              type: string
              description: |-
                * `scheduled` - Scheduled
                * `manual` - Manual
              readOnly: true
        relationships:
          type: object
          properties:
            provider:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - Provider
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
          required:
          - provider
    ScanCreate:
      type: object
      required:
      - type
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type2bbEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        attributes:
          type: object
          properties:
            scanner_args: {}
            name:
              type: string
              nullable: true
              maxLength: 100
              minLength: 3
        relationships:
          type: object
          properties:
            provider:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    type:
                      type: string
                      enum:
                      - Provider
                      title: Resource Type Name
                      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                        member is used to describe resource objects that share common
                        attributes and relationships.
                  required:
                  - id
                  - type
              required:
              - data
              description: The identifier of the related object.
              title: Resource Identifier
          required:
          - provider
    ScanCreateRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - Scan
            attributes:
              type: object
              properties:
                scanner_args: {}
                name:
                  type: string
                  nullable: true
                  maxLength: 100
                  minLength: 3
            relationships:
              type: object
              properties:
                provider:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                          enum:
                          - Provider
                          title: Resource Type Name
                          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                            member is used to describe resource objects that share
                            common attributes and relationships.
                      required:
                      - id
                      - type
                  required:
                  - data
                  description: The identifier of the related object.
                  title: Resource Identifier
              required:
              - provider
      required:
      - data
    ScanCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ScanCreate'
      required:
      - data
    ScanResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Scan'
      required:
      - data
    SerializerMetaclassResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Provider'
      required:
      - data
    Task:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeB52Enum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            completed_at:
              type: string
              format: date-time
              readOnly: true
            name:
              type: string
              readOnly: true
            state:
              type: string
              enum:
              - available
              - scheduled
              - executing
              - completed
              - failed
              - cancelled
              readOnly: true
            result:
              readOnly: true
            metadata:
              readOnly: true
    TaskResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Task'
      required:
      - data
    Tenant:
      type: object
      required:
      - type
      - id
      additionalProperties: false
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TenantTypeEnum'
          description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
            member is used to describe resource objects that share common attributes
            and relationships.
        id:
          type: string
          format: uuid
        attributes:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
              readOnly: true
            updated_at:
              type: string
              format: date-time
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
    TenantRequest:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          additionalProperties: false
          properties:
            type:
              type: string
              description: The [type](https://jsonapi.org/format/#document-resource-object-identification)
                member is used to describe resource objects that share common attributes
                and relationships.
              enum:
              - Tenant
            attributes:
              type: object
              properties:
                inserted_at:
                  type: string
                  format: date-time
                  readOnly: true
                updated_at:
                  type: string
                  format: date-time
                  readOnly: true
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
              required:
              - name
      required:
      - data
    TenantResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Tenant'
      required:
      - data
    TenantTypeEnum:
      type: string
      enum:
      - Tenant
    Type2bbEnum:
      type: string
      enum:
      - Scan
    Type4e8Enum:
      type: string
      enum:
      - Provider
    TypeB52Enum:
      type: string
      enum:
      - Task
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
